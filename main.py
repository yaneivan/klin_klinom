from tkinter import *
from audio import *
from time import sleep
from pydub import AudioSegment
from pydub.playback import play
from os.path import join as j

#–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!
#–ù–∞—á–∏–Ω–∞—é —ç—Ç–æ –ø–∏—Å–∞—Ç—å —Ä–æ–≤–Ω–æ –≤ –Ω–æ–≤—ã–π –≥–æ–¥, –Ω–æ —ç—Ç–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ.
#–ü–µ—Ä–≤—ã–π —Ä–∞–∑ —è –ø—Ä–∏—à—É —á–µ—Ç–æ —Ä–µ–∞–ª—å–Ω–æ –¥–ª—è –ª—é–¥–µ–π, –ø–æ—ç—Ç–æ–º—É –ø—Ä–∏–¥–µ—Ç—Å—è —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º. –î—É–º–∞–ª —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ Qt, –ø–æ—Ç–æ–º—É —á—Ç–æ —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —ç—Ç–æ –ø–µ—Ä–µ–≤–∏–æ–¥–∏—Ç—Å—è –∫–∞–∫ "–º–∏–ª–∞—à–∫–∞", –Ω–æ —ç—Ç–∞ —à—Ç—É–∫–∞ –≤—ã–¥–∞–ª–∞ –æ—à–∏–±–∫—É –∫–æ–≥–¥–∞ —è –ø–æ–ø—ã—Ç–∞–ª—Å—è —Ö–µ–ª–æ –≤–æ—Ä–ª–¥ –Ω–∞–ø–∏—Å–∞—Ç—å. –ù—É —Ç–æ —Ç–∞–∫ –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä? –ü–æ—ç—Ç–æ–º—É tkinter. –ù–∞–¥–µ—é—Å—å –¥–æ–¥–µ–ª–∞—é, –∏–¥–µ—è –Ω—Ä–∞–≤–∏—Ç—Å—è.

p = AudioParser('audio\\short.mp3', 'tiny')
p.Transcribe()
p.CutItUp()
# 'large' –µ—â–µ –µ—Å—Ç—å



window = Tk()

lbl = Label(window, text='–í—Å–µ–º –ø—Ä–∏–≤–µ—Çü§†', font = ("Arial Bold",20))
lbl.grid(column=0, row=0)

#txt = Entry(window, width=0)
txt = Text(window, height=10, width=60, wrap=WORD, bg='rosybrown', fg='white')
txt.grid(column=0, row=1)
txt.focus()

count = 0
def click_button():
	global txt, gen_p, p, count
	count += 1
	txt.delete('1.0', 'end')
	txt.insert(END, next(gen_p)['text'])
	if count == p.length:
		btn["state"] = DISABLED


def play_audio():
	global count
	segment = AudioSegment.from_mp3( j('tmp', str(count-1) + '.mp3') )
	play(segment)

gen_p = p.NextLineGenerator()
btn = Button(window, text="Show next phrase", command=click_button)
btn.grid(column=0, row=2) 

play_btn = Button(window, text="Play audio", command=play_audio)
play_btn.grid(column=0, row=3)



click_button()

window.geometry('500x700')

for c in range(4):
	window.columnconfigure(index=c, weight=2)

window.mainloop()

